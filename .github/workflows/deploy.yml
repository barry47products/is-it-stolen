name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    # Uncomment environment section once configured in GitHub Settings → Environments
    # environment:
    #   name: staging
    #   url: https://staging.isitstolen.com

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          echo "Image: ghcr.io/${{ github.repository }}:${{ github.sha }}-chainguard"
          # Add your staging deployment commands here
          # Examples:
          # - kubectl set image deployment/isitstolen isitstolen=ghcr.io/${{ github.repository }}:${{ github.sha }}-chainguard
          # - aws ecs update-service --cluster staging --service isitstolen --force-new-deployment
          # - docker-compose -f docker-compose.staging.yml up -d

      - name: Run smoke tests
        run: |
          echo "Running smoke tests against staging..."
          # Add smoke test commands here
          # curl -f https://staging.isitstolen.com/health || exit 1

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    # Uncomment environment section once configured in GitHub Settings → Environments
    # environment:
    #   name: production
    #   url: https://isitstolen.com
    needs: []  # Add dependencies if needed (e.g., tests, staging deployment)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          echo "Image: ghcr.io/${{ github.repository }}:${{ github.sha }}-chainguard"
          # Add your production deployment commands here
          # Examples:
          # - kubectl set image deployment/isitstolen isitstolen=ghcr.io/${{ github.repository }}:${{ github.sha }}-chainguard
          # - aws ecs update-service --cluster production --service isitstolen --force-new-deployment
          # - docker-compose -f docker-compose.production.yml up -d

      - name: Run smoke tests
        run: |
          echo "Running smoke tests against production..."
          # Add smoke test commands here
          # curl -f https://isitstolen.com/health || exit 1
